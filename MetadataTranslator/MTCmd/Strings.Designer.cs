//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MTCmd {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Strings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Strings() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("MTCmd.Strings", typeof(Strings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The connection string to connect to the Azure Analysis Services (Azure AS) or SQL Server Analysis Services (SSAS) data model, or Power BI Premium dataset.
        /// </summary>
        internal static string csDescription {
            get {
                return ResourceManager.GetString("csDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The full path to the export folder..
        /// </summary>
        internal static string efDescription {
            get {
                return ResourceManager.GetString("efDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Existing translations exported to: {0}.
        /// </summary>
        internal static string exportSuccess {
            get {
                return ResourceManager.GetString("exportSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The full path and name of the comma-separated values (csv) or resource (resx) translation file to import..
        /// </summary>
        internal static string ifDescription {
            get {
                return ResourceManager.GetString("ifDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Translation file {0} imported successfully..
        /// </summary>
        internal static string importSuccess {
            get {
                return ResourceManager.GetString("importSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid translation file type. The file must be either a comma-separated values (csv) file or a resource (resx) file..
        /// </summary>
        internal static string invalidFileType {
            get {
                return ResourceManager.GetString("invalidFileType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Either the imported language matches the default locale, or the file name does not correspond to a supported locale identifier. The file name convention is &lt;lcid&gt;.csv or &lt;lcid&gt;.resx..
        /// </summary>
        internal static string invalidLocale {
            get {
                return ResourceManager.GetString("invalidLocale", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A valid Windows Language Code Identifier (LCID), aka language tag, such as en-US, af-NA, and zh-CN..
        /// </summary>
        internal static string lcidDescription {
            get {
                return ResourceManager.GetString("lcidDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The mode of the command-line operation.
        /// </summary>
        internal static string modeDescription {
            get {
                return ResourceManager.GetString("modeDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This dataset has no translations..
        /// </summary>
        internal static string noExportableTranslations {
            get {
                return ResourceManager.GetString("noExportableTranslations", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use the --export-folder option to specify an export folder for this operation..
        /// </summary>
        internal static string noExportFolderSpecified {
            get {
                return ResourceManager.GetString("noExportFolderSpecified", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use the --import-file option to specify an import file for this operation..
        /// </summary>
        internal static string noImportFileSpecified {
            get {
                return ResourceManager.GetString("noImportFileSpecified", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No translated strings found! The keys of the reference resx &apos;{0}&apos; and the translation resx &apos;{1}&apos; don&apos;t seem to match..
        /// </summary>
        internal static string NoResxMatches {
            get {
                return ResourceManager.GetString("NoResxMatches", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to import &apos;{0}&apos; because the reference resx file with the default language strings was not found. In addition to the import resx, make sure the following reference resx file also exists: {1}.
        /// </summary>
        internal static string noResxReferenceFile {
            get {
                return ResourceManager.GetString("noResxReferenceFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Metadata Translator command-line app.
        /// </summary>
        internal static string rootCmdDescription {
            get {
                return ResourceManager.GetString("rootCmdDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Translations for &apos;{0}&apos; exported to: {1}.
        /// </summary>
        internal static string singleLocalExportSuccess {
            get {
                return ResourceManager.GetString("singleLocalExportSuccess", resourceCulture);
            }
        }
    }
}
